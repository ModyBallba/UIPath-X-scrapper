<Activity mc:Ignorable="sap sap2010" x:Class="Main" VisualBasic.Settings="{x:Null}" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>UiPath.Web</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>UiPath.GSuite.Activities.General.Enums</x:String>
      <x:String>UiPath.Shared.Activities.Utils</x:String>
      <x:String>UiPath.GSuite.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Shared.Activities.ConnectionService.Contracts</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>System.Numerics</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Excel.Enums</x:String>
      <x:String>UiPath.MicrosoftOffice365.Excel.Contracts</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Sharepoint</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Files.Models</x:String>
      <x:String>UiPath.MicrosoftOffice365.Files.Models</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Files.Enums</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Excel</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Contracts</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Files.Contracts</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.Web</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPath.GSuite.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.MetadataLoadContext</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Async.Queryable</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Collections.Specialized</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Main Sequence" sap:VirtualizedContainerService.HintSize="892.0000000000001,6238.4" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Int32" Name="FollowingCount_X" />
      <Variable x:TypeArguments="x:Int32" Name="TweetsCount_X" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence sap2010:Annotation.AnnotationText="Get User ID by Username:&#xA;&#xA;Makes an API request to fetch the User ID for the specified Twitter username (@AlMosahf).&#xA;Endpoint: https://api.twitter.com/2/users/by/username/AlMosahf&#xA;The response is parsed to extract the id field.&#xA;Fetch Public Metrics by User ID:&#xA;&#xA;Uses the obtained User ID to retrieve public metrics for the user.&#xA;Endpoint: https://api.twitter.com/2/users/{User_ID}?user.fields=public_metrics&#xA;Extracts metrics such as followers_count, tweet_count, and listed_count." DisplayName="Apply HTTP Request for X" sap:VirtualizedContainerService.HintSize="748.8,6215.2" sap2010:WorkflowViewState.IdRef="Sequence_2">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:Int32" Name="FollowersCount_X" />
        <Variable x:TypeArguments="x:String" Name="HTTP_OUTPUT" />
        <Variable x:TypeArguments="njl:JObject" Name="JsonObjectFollowers" />
        <Variable x:TypeArguments="x:String" Name="StringOutputHttp" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="715.2,308.8" sap2010:WorkflowViewState.IdRef="CommentOut_4">
        <ui:CommentOut.Body>
          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="449.6,198.4" sap2010:WorkflowViewState.IdRef="Sequence_26">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:HttpClient Body="{x:Null}" ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" FileAttachments="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseAttachment="{x:Null}" ResponseHeaders="{x:Null}" SecureClientCertificatePassword="{x:Null}" SecurePassword="{x:Null}" StatusCode="{x:Null}" Username="{x:Null}" AcceptFormat="ANY" sap2010:Annotation.AnnotationText="get number of followers using ID" AuthenticationType="None" BodyFormat="application/xml" DisplayName="HTTP Request-Followers" EnableSSLVerification="True" EndPoint="https://api.twitter.com/2/users/4795483642?user.fields=public_metrics" sap:VirtualizedContainerService.HintSize="416,138.4" sap2010:WorkflowViewState.IdRef="HttpClient_5" Method="GET" Result="[HTTP_OUTPUT]" TimeoutMS="6000">
              <ui:HttpClient.Attachments>
                <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
              </ui:HttpClient.Attachments>
              <ui:HttpClient.Cookies>
                <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
              </ui:HttpClient.Cookies>
              <ui:HttpClient.Headers>
                <InArgument x:TypeArguments="x:String" x:Key="Authorization" />
              </ui:HttpClient.Headers>
              <ui:HttpClient.Parameters>
                <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
              </ui:HttpClient.Parameters>
              <ui:HttpClient.UrlSegments>
                <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
              </ui:HttpClient.UrlSegments>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:HttpClient>
          </Sequence>
        </ui:CommentOut.Body>
      </ui:CommentOut>
      <Assign DisplayName="Assign testing for http" sap:VirtualizedContainerService.HintSize="715.2,113.6" sap2010:WorkflowViewState.IdRef="Assign_21">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[StringOutputHttp]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">["{""data"": {""name"": ""المُصْحَف"", ""username"": ""AlMosahf"", ""id"": ""4795483642"", ""public_metrics"": {""followers_count"": 20955118, ""following_count"": 4, ""tweet_count"": 782103, ""listed_count"": 2148, ""like_count"": 0, ""media_count"": 67969}}}"]</InArgument>
        </Assign.Value>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </Assign>
      <ui:DeserializeJson x:TypeArguments="njl:JObject" JsonSample="{x:Null}" DisplayName="`Deserialize JSON" sap:VirtualizedContainerService.HintSize="715.2,122.4" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_4" JsonObject="[JsonObjectFollowers]" JsonString="[StringOutputHttp]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:DeserializeJson>
      <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="715.2,212" sap2010:WorkflowViewState.IdRef="MultipleAssign_3">
        <ui:MultipleAssign.AssignOperations>
          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="16">
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:Int32">[FollowersCount_X]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:Int32">[CInt(JsonObjectFollowers("data")("public_metrics")("followers_count").ToString)]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:Int32">[FollowingCount_X]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:Int32">[CInt(JsonObjectFollowers("data")("public_metrics")("following_count").ToString)]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:Int32">[TweetsCount_X]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:Int32">[CInt(JsonObjectFollowers("data")("public_metrics")("tweet_count").ToString)]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
          </scg:List>
        </ui:MultipleAssign.AssignOperations>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:MultipleAssign>
      <ui:WriteTextFile File="{x:Null}" DisplayName="Write Text File" FileName="Followers.txt" sap:VirtualizedContainerService.HintSize="715.2,56.8" sap2010:WorkflowViewState.IdRef="WriteTextFile_4" Text="[String.Join(vbCrLf, &#xA;    &quot;Followers Count: &quot; &amp; FollowersCount_X.ToString(), &#xA;    &quot;Following Count: &quot; &amp; FollowingCount_X.ToString(), &#xA;    &quot;Tweet Count: &quot; &amp; TweetsCount_X.ToString()&#xA;)]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:WriteTextFile>
      <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" ShowExcelWindow="{x:Null}" DisplayName="Excel Process Scope" sap:VirtualizedContainerService.HintSize="715.2,5146.4" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_2">
        <ueab:ExcelProcessScopeX.Body>
          <ActivityAction x:TypeArguments="ui:IExcelProcess">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="681.6,5036.8" sap2010:WorkflowViewState.IdRef="Sequence_12">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" SensitivityLabel="{x:Null}" CreateNewFile="False" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="648,4976.8" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_1" ResizeWindow="None" SensitivityOperation="None" WorkbookPath="Excel Report\X Report.xlsx">
                <ueab:ExcelApplicationCard.Body>
                  <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="614,4684" sap2010:WorkflowViewState.IdRef="Sequence_13">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="sd:DataTable" Name="dt_ExcelData" />
                        <Variable x:TypeArguments="x:Int32" Name="FirstRowIndex" />
                        <Variable x:TypeArguments="x:Int32" Name="FirstEmptyRow" />
                        <Variable x:TypeArguments="x:Int32" Name="LastNonEmpty" />
                        <Variable x:TypeArguments="x:Int32" Name="LastDayFollowers_X" />
                        <Variable x:TypeArguments="x:Int32" Name="LastDayTweets_X" />
                        <Variable x:TypeArguments="x:Int32" Name="NewFollowersToday_X" />
                        <Variable x:TypeArguments="x:Int32" Name="NewTweetsToday" />
                        <Variable x:TypeArguments="x:Double" Name="GrowthRate_X" />
                        <Variable x:TypeArguments="x:Double" Name="Last7DaysTweets" />
                        <Variable x:TypeArguments="x:Int32" Name="pointer" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ueab:ReadRangeX DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="580,206.66666666666666" sap2010:WorkflowViewState.IdRef="ReadRangeX_1" Range="[Excel.SelectedRange]" SaveTo="[dt_ExcelData]" VisibleOnly="False" />
                      <ueab:FindFirstLastDataRowX BlankRowsToSkip="1" ColumnName="A" ConfigureLastRowAs="FirstEmptyRow" DisplayName="Find First/Last Data Row" FirstRowIndex="[FirstRowIndex]" FirstRowOffset="0" HasHeaders="False" sap:VirtualizedContainerService.HintSize="580,349.3333333333333" sap2010:WorkflowViewState.IdRef="FindFirstLastDataRowX_1" LastRowIndex="[FirstEmptyRow]" LastRowOffset="0" Range="[Excel.Sheet(&quot;Sheet1&quot;)]" VisibleRowsOnly="False" />
                      <Assign sap:VirtualizedContainerService.HintSize="580,117.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_11">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Int32">[LastNonEmpty]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Int32">[FirstEmptyRow - 1]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ueab:WriteCellX AutoIncrementRow="True" Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;A&quot;+FirstEmptyRow.ToString)]" DisplayName="Write Cell Date" sap:VirtualizedContainerService.HintSize="580,196.66666666666666" sap2010:WorkflowViewState.IdRef="WriteCellX_1" Value="[Now.ToString(&quot;dd-MM-yyyy&quot;)]" />
                      <ueab:WriteCellX AutoIncrementRow="True" Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;B&quot;+FirstEmptyRow.tostring)]" DisplayName="Write Cell All Followers Count" sap:VirtualizedContainerService.HintSize="580,196.66666666666666" sap2010:WorkflowViewState.IdRef="WriteCellX_4" Value="[FollowersCount_X]" />
                      <ueab:ReadCellValueX sap2010:Annotation.AnnotationText="Read last non empty Whole number of followers from column B&#xA;" Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;B&quot;+LastNonEmpty.tostring)]" DisplayName="Read Cell Value" GetFormattedText="True" sap:VirtualizedContainerService.HintSize="580,242" sap2010:WorkflowViewState.IdRef="ReadCellValueX_1">
                        <ueab:ReadCellValueX.SaveTo>
                          <OutArgument x:TypeArguments="x:Int32">[LastDayFollowers_X]</OutArgument>
                        </ueab:ReadCellValueX.SaveTo>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ueab:ReadCellValueX>
                      <Assign sap:VirtualizedContainerService.HintSize="580,117.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_13">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Int32">[NewFollowersToday_X]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Int32">[(FollowersCount_X - LastDayFollowers_X)]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ueab:WriteCellX sap2010:Annotation.AnnotationText="It gets New Followers by subtracting the whole number of followers of last day from today and save it in column C &quot;New Followers&quot;&#xA;" AutoIncrementRow="True" Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;C&quot;+FirstEmptyRow.tostring)]" DisplayName="Write Cell - New Followers Today" sap:VirtualizedContainerService.HintSize="580,258.6666666666667" sap2010:WorkflowViewState.IdRef="WriteCellX_6" Value="[NewFollowersToday_X]">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ueab:WriteCellX>
                      <ueab:WriteCellX sap2010:Annotation.AnnotationText="Total number of tweets&#xA;&#xA;" AutoIncrementRow="True" Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;D&quot;+FirstEmptyRow.tostring)]" DisplayName="Write Cell - Tweets Full Count" sap:VirtualizedContainerService.HintSize="580,258.6666666666667" sap2010:WorkflowViewState.IdRef="WriteCellX_9" Value="[TweetsCount_X]">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ueab:WriteCellX>
                      <ueab:ReadCellValueX sap2010:Annotation.AnnotationText="Read last non empty Whole number of followers from column B&#xA;" Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;D&quot;+LastNonEmpty.tostring)]" DisplayName="Read Cell Value" GetFormattedText="True" sap:VirtualizedContainerService.HintSize="580,242" sap2010:WorkflowViewState.IdRef="ReadCellValueX_3">
                        <ueab:ReadCellValueX.SaveTo>
                          <OutArgument x:TypeArguments="x:Int32">[LastDayTweets_X]</OutArgument>
                        </ueab:ReadCellValueX.SaveTo>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ueab:ReadCellValueX>
                      <Assign sap:VirtualizedContainerService.HintSize="580,117.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_14">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Int32">[NewTweetsToday]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Int32">[TweetsCount_X - LastDayTweets_X]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ueab:WriteCellX sap2010:Annotation.AnnotationText="It gets New Followers by subtracting the whole number of followers of last day from today and save it in column C &quot;New Followers&quot;&#xA;" AutoIncrementRow="True" Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;E&quot;+FirstEmptyRow.tostring)]" DisplayName="Write Cell - New Tweets Today" sap:VirtualizedContainerService.HintSize="580,258.6666666666667" sap2010:WorkflowViewState.IdRef="WriteCellX_8" Value="[NewTweetsToday]">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ueab:WriteCellX>
                      <Assign sap:VirtualizedContainerService.HintSize="580,117.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_15">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Double">[GrowthRate_X]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Double">[((FollowersCount_X - LastDayFollowers_X)/LastDayFollowers_X)*100]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ueab:WriteCellX sap2010:Annotation.AnnotationText="Number of gained followers today / whole last number of followers * 100&#xA;" AutoIncrementRow="True" Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;F&quot;+FirstEmptyRow.tostring)]" DisplayName="Write Cell Growth Rate" sap:VirtualizedContainerService.HintSize="580,242" sap2010:WorkflowViewState.IdRef="WriteCellX_7" Value="[GrowthRate_X]">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ueab:WriteCellX>
                      <Assign sap:VirtualizedContainerService.HintSize="580,117.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_19">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Double">[Last7DaysTweets]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Int32">0</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="580,117.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_23">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Int32">[pointer]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Int32">[FirstEmptyRow]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <If Condition="[FirstEmptyRow &gt; 8]" DisplayName="If  - Check for Average tweets" sap:VirtualizedContainerService.HintSize="580,1468.6666666666667" sap2010:WorkflowViewState.IdRef="If_3">
                        <If.Then>
                          <Sequence sap2010:Annotation.AnnotationText="SUM OF LAST 7 TWEETS COUNT TODAY /7&#xA;" DisplayName="Then" sap:VirtualizedContainerService.HintSize="546,1013.3333333333334" sap2010:WorkflowViewState.IdRef="Sequence_22">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:InterruptibleDoWhile CurrentIndex="{x:Null}" DisplayName="Do While" sap:VirtualizedContainerService.HintSize="512,643.3333333333334" sap2010:WorkflowViewState.IdRef="InterruptibleDoWhile_2">
                              <ui:InterruptibleDoWhile.Body>
                                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="478,527.3333333333334" sap2010:WorkflowViewState.IdRef="Sequence_29">
                                  <Sequence.Variables>
                                    <Variable x:TypeArguments="x:Int32" Name="MyTweetsForCalc" />
                                  </Sequence.Variables>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ueab:ReadCellValueX sap2010:Annotation.AnnotationText="Read last non empty Whole number of followers from column B&#xA;" Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;E&quot;+pointer.tostring)]" DisplayName="Read Cell Value" GetFormattedText="True" sap:VirtualizedContainerService.HintSize="444,242" sap2010:WorkflowViewState.IdRef="ReadCellValueX_7">
                                    <ueab:ReadCellValueX.SaveTo>
                                      <OutArgument x:TypeArguments="x:Int32">[MyTweetsForCalc]</OutArgument>
                                    </ueab:ReadCellValueX.SaveTo>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ueab:ReadCellValueX>
                                  <Assign sap:VirtualizedContainerService.HintSize="444,117.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_26">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Double">[Last7DaysTweets]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Double">[Last7DaysTweets +MyTweetsForCalc]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="444,108" sap2010:WorkflowViewState.IdRef="Assign_27">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Int32">[pointer]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Int32">[pointer -1]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </ui:InterruptibleDoWhile.Body>
                              <ui:InterruptibleDoWhile.Condition>
                                <VisualBasicValue x:TypeArguments="x:Boolean" DisplayName="Visual basic value" ExpressionText="(FirstEmptyRow - pointer) &lt;&gt; 7" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_4" />
                              </ui:InterruptibleDoWhile.Condition>
                            </ui:InterruptibleDoWhile>
                            <ueab:WriteCellX sap2010:Annotation.AnnotationText="Average Tweets / day&#xA;" AutoIncrementRow="True" Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;G&quot;+FirstEmptyRow.tostring)]" DisplayName="Write Cell Average Tweets" sap:VirtualizedContainerService.HintSize="512,232.66666666666666" sap2010:WorkflowViewState.IdRef="WriteCellX_14" Value="[Last7DaysTweets/7]">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ueab:WriteCellX>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="468,292.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_23">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ueab:WriteCellX sap2010:Annotation.AnnotationText="Average Tweets / day&#xA;" AutoIncrementRow="True" Cell="[Excel.Sheet(&quot;Sheet1&quot;).Cell(&quot;G&quot;+FirstEmptyRow.tostring)]" DisplayName="Write Cell Average Tweets" sap:VirtualizedContainerService.HintSize="434,232.66666666666666" sap2010:WorkflowViewState.IdRef="WriteCellX_10" Value="[TweetsCount_X - LastDayTweets_X]">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ueab:WriteCellX>
                          </Sequence>
                        </If.Else>
                      </If>
                    </Sequence>
                  </ActivityAction>
                </ueab:ExcelApplicationCard.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ueab:ExcelApplicationCard>
            </Sequence>
          </ActivityAction>
        </ueab:ExcelProcessScopeX.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ueab:ExcelProcessScopeX>
    </Sequence>
  </Sequence>
</Activity>